# azure-pipelines-database.yml
trigger:
  branches: { include: [ main ] }
  paths:    { include: [ 'HoneyHub.Platform/Domains/Users/HoneyHub.Users.Database/**', '**/*.sqlproj' ] }
pr: none

pool: { vmImage: windows-latest }

variables:
- group: HoneyHub-Dev
- name: buildConfiguration
  value: Release
- name: sqlprojPath
  value: HoneyHub.Platform/Domains/Users/HoneyHub.Users.Database/HoneyHub.Users.Database.sqlproj
- name: dacpacOutDir
  value: '$(Build.ArtifactStagingDirectory)\dacpac\'

stages:
- stage: Build_DACPAC
  jobs:
  - job: Build
    steps:
    - task: VSBuild@1
      inputs:
        solution: '$(sqlprojPath)'
        msbuildArgs: >
          /t:Build
          /p:Configuration=$(buildConfiguration)
          /p:Platform="Any CPU"
          /p:OutDir=$(dacpacOutDir)
        platform: 'Any CPU'
        configuration: '$(buildConfiguration)'
        clean: true

    - task: PublishPipelineArtifact@1
      inputs:
        targetPath: '$(dacpacOutDir)'
        artifact: 'DatabaseDacpac'

- stage: Deploy_DEV
  dependsOn: Build_DACPAC
  jobs:
  - deployment: DbDeployDEV
    environment: DEV
    strategy:
      runOnce:
        deploy:
          steps:
          - download: current
            artifact: DatabaseDacpac

          - pwsh: |
              Write-Host "ConnStr present? " + (-not [string]::IsNullOrEmpty($env:DEV_SQL_CONNECTION_STRING))
              Write-Host "ConnStr length: " + ($env:DEV_SQL_CONNECTION_STRING).Length
            displayName: "Check mapped conn string"
            env:
              DEV_SQL_CONNECTION_STRING: $[ variables['db-admin-user-connstring'] ]

          - pwsh: |
              $dacpac = Get-ChildItem "$(Pipeline.Workspace)\DatabaseDacpac" -Recurse -Filter *.dacpac | Select-Object -First 1
              if (-not $dacpac) { throw "DACPAC not found." }

              $sqlpkg = "${env:ProgramFiles}\Microsoft SQL Server\160\DAC\bin\SqlPackage.exe"
              if (-not (Test-Path $sqlpkg)) { $sqlpkg = "${env:ProgramFiles}\Microsoft SQL Server\150\DAC\bin\SqlPackage.exe" }

              $conn = $env:DEV_SQL_CONNECTION_STRING
              if (-not $conn) { throw "DEV_SQL_CONNECTION_STRING is empty. Check var group linkage & secret name." }

              & $sqlpkg /Action:Publish `
                /SourceFile:$($dacpac.FullName) `
                /TargetConnectionString:"$conn" `
                /p:BlockOnPossibleDataLoss=true `
                /p:DropObjectsNotInSource=false `
                /p:AllowIncompatiblePlatform=false
            displayName: 'SqlPackage Publish (DEV)'
            env:
              DEV_SQL_CONNECTION_STRING: $[ variables['db-admin-user-connstring'] ]
