root = true

# ------------------------------------------------------------------
# 1.  Default everything to Suggestion (shows in IDE, no build break)
# ------------------------------------------------------------------
dotnet_analyzer_diagnostic.severity = suggestion

# Suppress specific analyzer rules that conflict with clean code preferences
dotnet_diagnostic.IDE0011.severity = silent  # Add braces
dotnet_diagnostic.IDE0160.severity = silent  # Convert to block scoped namespace
dotnet_diagnostic.IDE0161.severity = silent  # Convert to file scoped namespace
dotnet_diagnostic.CS8019.severity = silent   # Unnecessary using directive
dotnet_diagnostic.IDE0007.severity = silent  # Use explicit type instead of var
dotnet_diagnostic.IDE0008.severity = silent  # Use var instead of explicit type
dotnet_diagnostic.IDE1006.severity = silent  # Naming rule violation (underscores in member names)

# ------------------------------------------------------------------
# 2.  C# files
# ------------------------------------------------------------------
[*.cs]

############ Core Formatting
indent_style = space
indent_size = 4
end_of_line = crlf
insert_final_newline = true
trim_trailing_whitespace = true
charset = utf-8

############ Braces - Minimal usage (clean code style)
csharp_prefer_braces = false:silent
csharp_new_line_before_open_brace = all
csharp_new_line_before_else = true
csharp_new_line_before_catch = true
csharp_new_line_before_finally = true

############ Namespace preferences
csharp_style_namespace_declarations = file_scoped:suggestion

############ var preferences - Use when beneficial
csharp_style_var_when_type_is_apparent = true:silent
csharp_style_var_for_built_in_types = true:silent
csharp_style_var_elsewhere = false:silent

############ Expression preferences (clean code)
csharp_prefer_simple_using_statement = true:suggestion
csharp_style_expression_bodied_methods = when_on_single_line:suggestion
csharp_style_expression_bodied_constructors = when_on_single_line:suggestion
csharp_style_expression_bodied_operators = when_on_single_line:suggestion
csharp_style_expression_bodied_properties = when_on_single_line:suggestion
csharp_style_expression_bodied_indexers = when_on_single_line:suggestion
csharp_style_expression_bodied_accessors = when_on_single_line:suggestion
csharp_style_expression_bodied_lambdas = when_on_single_line:suggestion
csharp_style_expression_bodied_local_functions = when_on_single_line:suggestion

############ Pattern matching
csharp_style_pattern_matching_over_is_with_cast_check = true:suggestion
csharp_style_pattern_matching_over_as_with_null_check = true:suggestion
csharp_style_prefer_switch_expression = true:suggestion
csharp_style_prefer_pattern_matching = true:suggestion
csharp_style_prefer_not_pattern = true:suggestion

############ Code block preferences
csharp_prefer_simple_default_expression = true:suggestion
csharp_style_deconstructed_variable_declaration = true:suggestion
csharp_style_inlined_variable_declaration = true:suggestion
csharp_style_throw_expression = true:suggestion
csharp_style_conditional_delegate_call = true:suggestion

############ Modifier preferences
csharp_preferred_modifier_order = public,private,protected,internal,static,extern,new,virtual,abstract,sealed,override,readonly,unsafe,volatile,async:suggestion
dotnet_style_require_accessibility_modifiers = for_non_interface_members:suggestion
dotnet_style_readonly_field = true:suggestion

############ Parentheses preferences
dotnet_style_parentheses_in_arithmetic_binary_operators = never_if_unnecessary:suggestion
dotnet_style_parentheses_in_relational_binary_operators = never_if_unnecessary:suggestion
dotnet_style_parentheses_in_other_binary_operators = never_if_unnecessary:suggestion
dotnet_style_parentheses_in_other_operators = never_if_unnecessary:suggestion

############ .NET style rules
dotnet_style_object_initializer = true:suggestion
dotnet_style_collection_initializer = true:suggestion
dotnet_style_explicit_tuple_names = true:suggestion
dotnet_style_null_propagation = true:suggestion
dotnet_style_coalesce_expression = true:suggestion
dotnet_style_prefer_is_null_check_over_reference_equality_method = true:suggestion
dotnet_style_prefer_inferred_tuple_names = true:suggestion
dotnet_style_prefer_inferred_anonymous_type_member_names = true:suggestion
dotnet_style_prefer_auto_properties = true:suggestion
dotnet_style_prefer_conditional_expression_over_assignment = true:suggestion
dotnet_style_prefer_conditional_expression_over_return = true:suggestion

############ Naming conventions
dotnet_naming_rule.interfaces_should_be_prefixed_with_i.severity = suggestion
dotnet_naming_rule.interfaces_should_be_prefixed_with_i.symbols = interface
dotnet_naming_rule.interfaces_should_be_prefixed_with_i.style = prefix_interface_with_i

dotnet_naming_rule.types_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.types_should_be_pascal_case.symbols = types
dotnet_naming_rule.types_should_be_pascal_case.style = pascal_case

dotnet_naming_rule.non_field_members_should_be_pascal_case.severity = suggestion
dotnet_naming_rule.non_field_members_should_be_pascal_case.symbols = non_field_members
dotnet_naming_rule.non_field_members_should_be_pascal_case.style = pascal_case

# Symbol specifications
dotnet_naming_symbols.interface.applicable_kinds = interface
dotnet_naming_symbols.interface.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected

dotnet_naming_symbols.types.applicable_kinds = class, struct, interface, enum
dotnet_naming_symbols.types.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected

dotnet_naming_symbols.non_field_members.applicable_kinds = property, event, method
dotnet_naming_symbols.non_field_members.applicable_accessibilities = public, internal, private, protected, protected_internal, private_protected

# Naming styles
dotnet_naming_style.pascal_case.capitalization = pascal_case

dotnet_naming_style.prefix_interface_with_i.capitalization = pascal_case
dotnet_naming_style.prefix_interface_with_i.required_prefix = I

############ Spacing and wrapping
csharp_space_around_binary_operators = before_and_after
csharp_space_around_declaration_statements = false
csharp_space_before_open_square_brackets = false
csharp_space_between_empty_square_brackets = false
csharp_space_between_method_call_empty_parameter_list_parentheses = false
csharp_space_between_method_call_name_and_opening_parenthesis = false
csharp_space_between_method_call_parameter_list_parentheses = false
csharp_space_between_method_declaration_empty_parameter_list_parentheses = false
csharp_space_between_method_declaration_name_and_open_parenthesis = false
csharp_space_between_method_declaration_parameter_list_parentheses = false
csharp_space_between_square_brackets = false

# ------------------------------------------------------------------
# 3.  Test files - Allow underscores in method names
# ------------------------------------------------------------------
[*{Test,Tests}.cs]

# Override naming rules for test methods to allow underscores
dotnet_naming_rule.test_methods_with_underscores.severity = none
dotnet_naming_rule.test_methods_with_underscores.symbols = all_methods
dotnet_naming_rule.test_methods_with_underscores.style = test_method_style

dotnet_naming_symbols.all_methods.applicable_kinds = method
dotnet_naming_symbols.all_methods.applicable_accessibilities = *

dotnet_naming_style.test_method_style.capitalization = pascal_case
dotnet_naming_style.test_method_style.word_separator = _

# Also suppress the IDE1006 rule specifically for test files
dotnet_diagnostic.IDE1006.severity = none

# ------------------------------------------------------------------
# 4.  Other file types
# ------------------------------------------------------------------

[*.{json,yml,yaml}]
indent_style = space
indent_size = 2

[*.{xml,csproj,props,targets}]
indent_style = space
indent_size = 2

[*.md]
trim_trailing_whitespace = false

[Makefile]
indent_style = tab
